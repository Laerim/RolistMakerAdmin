// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RolistMakerAdmin.GUI;

namespace RolistMakerAdmin.GUI.Migrations
{
    [DbContext(typeof(RolistMakerContext))]
    partial class RolistMakerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("RolistMakerAdmin.GUI.Classe", b =>
                {
                    b.Property<int>("ClasseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("ClasseId");

                    b.HasIndex("GameId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.ClasseCompetence", b =>
                {
                    b.Property<int>("ClasseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetenceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClasseId", "CompetenceId");

                    b.HasIndex("CompetenceId");

                    b.ToTable("ClasseCompetences");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Competence", b =>
                {
                    b.Property<int>("CompetenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("CompetenceId");

                    b.HasIndex("GameId");

                    b.ToTable("Competences");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Classe")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Competence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Race")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Statistique")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titre")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lien")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageId");

                    b.HasIndex("GameId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Lieu", b =>
                {
                    b.Property<int>("LieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("LieuId");

                    b.HasIndex("GameId");

                    b.HasIndex("ImageId");

                    b.ToTable("Lieus");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.LieuMusique", b =>
                {
                    b.Property<int>("LieuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusiqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ordre")
                        .HasColumnType("INTEGER");

                    b.HasKey("LieuId", "MusiqueId");

                    b.HasIndex("MusiqueId");

                    b.ToTable("LieuMusiques");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Musique", b =>
                {
                    b.Property<int>("MusiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lien")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("MusiqueId");

                    b.HasIndex("GameId");

                    b.ToTable("Musiques");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.MusiquePlaylist", b =>
                {
                    b.Property<int>("MusiqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MusiqueId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("MusiquePlaylists");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Objet", b =>
                {
                    b.Property<int>("ObjetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TypeObjetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ObjetId");

                    b.HasIndex("GameId");

                    b.HasIndex("TypeObjetId");

                    b.ToTable("Objets");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Personnage", b =>
                {
                    b.Property<int>("PersonnageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClasseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SexeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonnageId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("GameId");

                    b.HasIndex("RaceId");

                    b.HasIndex("SexeId");

                    b.ToTable("Personnages");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageCompetence", b =>
                {
                    b.Property<int>("PersonnageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetenceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonnageId", "CompetenceId");

                    b.HasIndex("CompetenceId");

                    b.ToTable("PersonnageCompetences");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageObjet", b =>
                {
                    b.Property<int>("PersonnageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObjetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonnageId", "ObjetId");

                    b.HasIndex("ObjetId");

                    b.ToTable("PersonnageObjets");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageRace", b =>
                {
                    b.Property<int>("PersonnageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RaceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonnageId", "RaceId");

                    b.HasIndex("RaceId");

                    b.ToTable("PersonnageRace");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageStatistique", b =>
                {
                    b.Property<int>("PersonnageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatistiqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Total")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonnageId", "StatistiqueId");

                    b.HasIndex("StatistiqueId");

                    b.ToTable("PersonnageStatistiques");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("PlaylistId");

                    b.HasIndex("GameId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("RaceId");

                    b.HasIndex("GameId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Sexe", b =>
                {
                    b.Property<int>("SexeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("SexeId");

                    b.HasIndex("GameId");

                    b.ToTable("Sexes");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Statistique", b =>
                {
                    b.Property<int>("StatistiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("StatistiqueId");

                    b.HasIndex("GameId");

                    b.ToTable("Statistiques");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.StatistiqueObjet", b =>
                {
                    b.Property<int>("StatistiqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObjetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bonus")
                        .HasColumnType("INTEGER");

                    b.HasKey("StatistiqueId", "ObjetId");

                    b.HasIndex("ObjetId");

                    b.ToTable("StatistiqueObjets");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.TypeObjet", b =>
                {
                    b.Property<int>("TypeObjetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("TypeObjetId");

                    b.HasIndex("GameId");

                    b.HasIndex("ImageId");

                    b.ToTable("TypeObjets");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Classe", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.ClasseCompetence", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Classe", "Classe")
                        .WithMany("ClasseCompetences")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Competence", "Competence")
                        .WithMany("ClasseCompetences")
                        .HasForeignKey("CompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Competence", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Image", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Lieu", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("RolistMakerAdmin.GUI.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.LieuMusique", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Lieu", "Lieu")
                        .WithMany("LieuMusique")
                        .HasForeignKey("LieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Musique", "Musique")
                        .WithMany("LieuMusique")
                        .HasForeignKey("MusiqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Musique", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.MusiquePlaylist", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Musique", "Musique")
                        .WithMany("MusiquePlaylists")
                        .HasForeignKey("MusiqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Playlist", "Playlist")
                        .WithMany("MusiquePlaylists")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Objet", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("RolistMakerAdmin.GUI.TypeObjet", "TypeObjet")
                        .WithMany()
                        .HasForeignKey("TypeObjetId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Personnage", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseId");

                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("RolistMakerAdmin.GUI.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId");

                    b.HasOne("RolistMakerAdmin.GUI.Sexe", "Sexe")
                        .WithMany()
                        .HasForeignKey("SexeId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageCompetence", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Competence", "Competence")
                        .WithMany("PersonnageCompetences")
                        .HasForeignKey("CompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Personnage", "Personnage")
                        .WithMany("PersonnageCompetences")
                        .HasForeignKey("PersonnageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageObjet", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Objet", "Objet")
                        .WithMany("PersonnageObjets")
                        .HasForeignKey("ObjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Personnage", "Personnage")
                        .WithMany("PersonnageObjets")
                        .HasForeignKey("PersonnageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageRace", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Personnage", "Personnage")
                        .WithMany("PersonnageRaces")
                        .HasForeignKey("PersonnageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.PersonnageStatistique", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Personnage", "Personnage")
                        .WithMany("PersonnageStatistiques")
                        .HasForeignKey("PersonnageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Statistique", "Statistique")
                        .WithMany("PersonnageStatistiques")
                        .HasForeignKey("StatistiqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Playlist", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Race", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Sexe", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.Statistique", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.StatistiqueObjet", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Objet", "Objet")
                        .WithMany("StatistiqueObjets")
                        .HasForeignKey("ObjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolistMakerAdmin.GUI.Statistique", "Statistique")
                        .WithMany("StatistiqueObjets")
                        .HasForeignKey("StatistiqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolistMakerAdmin.GUI.TypeObjet", b =>
                {
                    b.HasOne("RolistMakerAdmin.GUI.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("RolistMakerAdmin.GUI.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });
#pragma warning restore 612, 618
        }
    }
}
